//
//  {{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright © {{ year }} {{ developer.company }}. All rights reserved.
//

import UIKit
import DifferenceKit
import SnapKit

final class {{ module_info.name }}ViewController: UIViewController {

    var output: {{ module_info.name }}ViewOutput!

    // MARK: Private properties
    
    fileprivate var models: [AnyDifferentiable] = []

    private lazy var tableView: UITableView = {
        let tableView = UITableView(frame: .zero)
        tableView.dataSource = self
        tableView.tableFooterView = UIView()
        tableView.separatorStyle = .none

        return tableView
    }()

    // MARK: Life cycle

    override func viewDidLoad() {
        super.viewDidLoad()
        configureUI()
        output.viewIsReady()
    }

    // MARK: - UI Configuration
        
    private func configureUI() {
        view.addSubview(tableView)
        tableView.snp.makeConstraints { make in
            make.top.equalTo(view.safeAreaLayoutGuide.snp.top)
            make.bottom.equalTo(view.safeAreaLayoutGuide.snp.bottom)
            make.left.right.equalToSuperview()
        }

        // 1) регистрируем ячейку tableView.register(cell: _.self)
        // 2) объявем связь в CellFactoryLinkMapper
        // 3) добавляем в презентер делегат ячейки
    }
}

// MARK: {{module_info.name}}ViewInput

extension {{ module_info.name }}ViewController: {{module_info.name}}ViewInput {

    func setupInitialState(title: String?) {
        navigationItem.title = title
    }

    func updateTable(using container: FPDiffContainer) {
        let diff = container.createDiff(source: models)
        tableView.reload(using: diff, with: .none) { (models) in
            self.models = models
        }
    }
}

// MARK: UITableViewDataSource

extension {{ module_info.name }}ViewController: UITableViewDataSource {
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return models.count
    }

    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        return RegisterFactory.diffCell(models, output, tableView, indexPath)
    }
}